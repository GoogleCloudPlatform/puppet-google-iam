# Copyright 2017 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by puppet-codegen and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in README.md and
#     CONTRIBUTING.md located at the root of this package.
#
# ----------------------------------------------------------------------------

require 'google/iam/property/boolean'
require 'google/iam/property/enum'
require 'google/iam/property/serviceaccount_name'
require 'google/iam/property/string'
require 'google/iam/property/time'
require 'puppet'

Puppet::Type.newtype(:giam_service_account_key) do
  @doc = 'A service account in the Identity and Access Management API.'

  autorequire(:gauth_credential) do
    credential = self[:credential]
    raise "#{ref}: required property 'credential' is missing" if credential.nil?
    [credential]
  end

  autorequire(:giam_service_account) do
    reference = self[:service_account]
    reference.autorequires unless reference.nil?
  end

  ensurable

  newparam :credential do
    desc <<-DESC
      A gauth_credential name to be used to authenticate with Google Cloud
      Platform.
    DESC
  end

  newparam(:project) do
    desc 'A Google Cloud Platform project to manage.'
  end

  newparam(:name, namevar: true) do
    # TODO(nelsona): Make this description to match the key of the object.
    desc 'The name of the ServiceAccountKey.'
  end

  newparam(:service_account,
           parent: Google::Iam::Property::ServiAccouNameRef) do
    desc 'A reference to ServiceAccount resource'
  end

  newparam(:path, parent: Google::Iam::Property::String) do
    desc <<-DOC
      The full name of the file that will hold the service account private key.
      The management of this file will depend on the value of sync_file
      parameter. File path must be absolute.
    DOC
    validate do |value|
      raise "'path' parameter should be an absolute path." \
        unless (Pathname.new value).absolute?
    end
  end

  newparam(:key_id, parent: Google::Iam::Property::String) do
    desc 'Used to ensure the deletion of the key in the absence of a key file.'
  end

  newparam(:fail_if_mismatch, parent: Google::Iam::Property::Boolean) do
    desc <<-DOC
      If set to 'true' protects the target file from being rewritten with a new
      private key. By default the file is always ensured to have a valid
      private key on final state.
    DOC
    newvalue(:true)
    newvalue(:false)
  end

  newproperty(:name, parent: Google::Iam::Property::String) do
    desc 'The name of the key. (output only)'
  end

  newproperty(:private_key_type, parent: Google::Iam::Property::Enum) do
    desc 'Output format for the service account key.'
    newvalue(:TYPE_UNSPECIFIED)
    newvalue(:TYPE_PKCS12_FILE)
    newvalue(:TYPE_GOOGLE_CREDENTIALS_FILE)
  end

  newproperty(:key_algorithm, parent: Google::Iam::Property::Enum) do
    desc 'Specifies the algorithm for the key.'
    newvalue(:KEY_ALG_UNSPECIFIED)
    newvalue(:KEY_ALG_RSA_1024)
    newvalue(:KEY_ALG_RSA_2048)
  end

  newproperty(:private_key_data, parent: Google::Iam::Property::String) do
    desc 'Private key data. Base-64 encoded. (output only)'
  end

  newproperty(:public_key_data, parent: Google::Iam::Property::String) do
    desc 'Public key data. Base-64 encoded. (output only)'
  end

  newproperty(:valid_after_time, parent: Google::Iam::Property::Time) do
    desc 'Key can only be used after this time. (output only)'
  end

  newproperty(:valid_before_time, parent: Google::Iam::Property::Time) do
    desc 'Key can only be used before this time. (output only)'
  end
end
